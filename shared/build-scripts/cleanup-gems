#!/bin/bash

set -e

ruby_dir=${1:-"vendor/bundle/ruby"}
ruby_ver=${RUBY_VERSION%.*}

# exclude rubygems build cache
rm -rf ${ruby_dir}/*/cache

# exclude test and some vendor folders
rm -rf \
  ${ruby_dir}/*/gems/*/spec \
  ${ruby_dir}/*/gems/*/test \
  ${ruby_dir}/*/gems/*/tests

# Some vendor folders (e.g. licensee) are needed by KhulnaSoft.
# For now, exclude the most space-consuming gems until
# there's a better way to whitelist directories.
rm -rf \
  ${ruby_dir}/*/gems/rugged*/vendor \
  ${ruby_dir}/*/gems/libyajl2*/**/vendor

# ACE editor includes a bundle of Javascrip contents (13M)
# Commented here, because these sources are needed for asset compilation
#rm -rf \
#  ${ruby_dir}/*/gems/ace-rails*/vendor \

# exclude gem build logs
rm -rf \
  ${ruby_dir}/*/extensions/*/*/*/mkmf.log \
  ${ruby_dir}/*/extensions/*/*/*/gem_make.out

# exclude C sources
rm -rf \
  ${ruby_dir}/*/gems/*/ext/*.c \
  ${ruby_dir}/*/gems/*/ext/*/*.c \
  ${ruby_dir}/*/gems/*/ext/*.o \
  ${ruby_dir}/*/gems/*/ext/*/*.o

# exclude other gem files
rm -rf \
  ${ruby_dir}/*/gems/*/*.gemspec \
  ${ruby_dir}/*/gems/*/*.md \
  ${ruby_dir}/*/gems/*/*.rdoc \
  ${ruby_dir}/*/gems/*/*.sh \
  ${ruby_dir}/*/gems/*/*.txt \
  ${ruby_dir}/*/gems/*/*LICENSE* \
  ${ruby_dir}/*/gems/*/CHANGES* \
  ${ruby_dir}/*/gems/*/Gemfile \
  ${ruby_dir}/*/gems/*/Guardfile \
  ${ruby_dir}/*/gems/*/README* \
  ${ruby_dir}/*/gems/*/Rakefile \
  ${ruby_dir}/*/gems/*/run_tests.rb \
  ${ruby_dir}/*/gems/*/Documentation \
  ${ruby_dir}*/gems/*/bench \
  ${ruby_dir}/*/gems/*/contrib \
  ${ruby_dir}/*/gems/*/doc \
  ${ruby_dir}/*/gems/*/doc-api \
  ${ruby_dir}/*/gems/*/examples \
  ${ruby_dir}/*/gems/*/fixtures \
  ${ruby_dir}/*/gems/*/gemfiles \
  ${ruby_dir}/*/gems/*/libtest \
  ${ruby_dir}/*/gems/*/man \
  ${ruby_dir}/*/gems/*/sample_documents \
  ${ruby_dir}/*/gems/*/samples \
  ${ruby_dir}/*/gems/*/sample \
  ${ruby_dir}/*/gems/*/script \
  ${ruby_dir}/*/gems/*/t

# Exclude additional files from specific gems
rm -rf \
  ${ruby_dir}/*/gems/grpc-*/include \
  ${ruby_dir}/*/gems/grpc-*/src/core \
  ${ruby_dir}/*/gems/grpc-*/src/ruby/ext \
  ${ruby_dir}/*/gems/grpc-*/src/ruby/spec \
  ${ruby_dir}/*/gems/grpc-*/third_party

find ${ruby_dir} -name '*.gem' -type f -print -delete

if [[ -z "$RUBY_VERSION" ]]; then
  exit 0
fi

ruby_ver=${RUBY_VERSION%.*}

# Clean up extraneous shared libraries for precompiled gems.
#
# Precompiled gems can be identified via the `x86_64-linux` suffix:
# $ ls -1 /srv/khulnasoft/vendor/bundle/ruby/3.1.0/gems | grep x86_64-linux
# devfile-0.0.24.pre.alpha1-x86_64-linux
# khulnasoft-glfm-markdown-0.0.12-x86_64-linux
# google-protobuf-3.25.2-x86_64-linux
# grpc-1.60.0-x86_64-linux
# nokogiri-1.16.0-x86_64-linux
# prometheus-client-mmap-1.1.1-x86_64-linux
# re2-2.7.0-x86_64-linux
#
gems=("khulnasoft-glfm-markdown" "google-protobuf" "nokogiri" "prometheus-client-mmap" "re2")

for gem in "${gems[@]}"; do
  find "${ruby_dir}"/*/gems/${gem}-*/lib ! -path */"${ruby_ver}"/* -name '*.so' -type f -print -delete || true
done

# Remove extraneous shared libraries for grpc
find "${ruby_dir}"/*/gems/grpc-*/src/ruby/lib/grpc ! -path */"${ruby_ver}"/* -name '*.so' -type f -print -delete || true
